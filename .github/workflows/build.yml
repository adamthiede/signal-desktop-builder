name: build and deploy signal
on:
  push:
    branches:
      - main
      - master
      - testing
  workflow_dispatch:
jobs:
  publish-release:
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    name: publish release
    steps:
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        id: create_release
          with:
            draft: false
            prerelease: false
            release_name: ${{ github.ref }}
            tag_name: ${{ github.ref }}
            env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-deploy-signal:
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    name: build and deploy signal
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: install secrets
        shell: bash
        env:
          ID_RSA: ${{secrets.ID_RSA}}
          SSHCONFIG: ${{secrets.SSHCONFIG}}
          GPG_KEY: ${{secrets.GPG_KEY}}
        run: |
          sudo apt update
          sudo apt install -qq -y gpg openssh-client
          mkdir -p ~/.ssh
          echo "$ID_RSA" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$SSHCONFIG" > ~/.ssh/config
          echo "$GPG_KEY" | gpg --import
      - name: checkout code
        uses: actions/checkout@v3
      - name: install deps
        shell: bash
        run: |
          sudo apt install -qq -y bash rsync podman flatpak elfutils coreutils slirp4netns rootlesskit binfmt-support fuse-overlayfs flatpak-builder qemu-user-static
      - name: build deb
        shell: bash
        env:
          VERSION: "6.47.0"
        run: |
          set -x
          echo "Version is: $VERSION"
          bash ci-build.sh
          podman stop signal-desktop-$VERSION
          cp ~/signal-desktop.deb .
      - name: install flatpak deps
        shell: bash
        env:
          CI_USER: runner
        run: |
          sudo rm -rf /opt/pakrepo/
          sudo mkdir -p /opt/pakrepo
          sudo chown "$USER" /opt/pakrepo
          sudo flatpak update --noninteractive -y
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install --noninteractive --arch=aarch64 flathub org.electronjs.Electron2.BaseApp//23.08 org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08 -y
      - name: build flatpak
        shell: bash
        run: |
          flatpak-builder --arch=aarch64 --gpg-sign=FBEF43DC8C6BE9A7 --repo=/opt/pakrepo --force-clean .builddir flatpak.yml
          flatpak build-bundle --arch=aarch64 /opt/pakrepo ./signal.flatpak org.signal.Signal master
          cp ./signal.flatpak ~/
      - name: sync to server
        shell: bash
        if: env.BRANCH == 'master'
        run: |
          rsync -azu --delete /opt/pakrepo/ server:/var/www/htdocs/elagost.com/flatpak/repo/
          rsync -z ~/signal-desktop.deb server:/var/www/htdocs/elagost.com/flatpak/
          rsync -z ~/signal.flatpak server:/var/www/htdocs/elagost.com/flatpak/
      - name: upload .deb as build artifact
        continue-on-error: true
        env:
          VERSION: "6.47.0"
        uses: actions/upload-artifact@v3
        with:
          name: signal-desktop-arm64-${{ env.VERSION }}.deb
          path: signal-desktop.deb
      - name: upload flatpak bundle as build artifact
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: signal.flatpak
          path: signal.flatpak
      - name: clean up images for self-hosted runner
        env:
          VERSION: "6.47.0"
        shell: bash
        run: |
          podman container rm signal-desktop-${{ env.VERSION }}
          podman image rm localhost/signal-desktop-image-${{ env.VERSION }}:latest
      - name: Upload release artifacts
        env:
          VERSION: "6.47.0"
        uses: AButler/upload-release-assets@v3.0
        with:
          release-tag: ${{ env.VERSION }}
          files: "signal-desktop-arm64-${{ env.VERSION }}.deb;signal.flatpak"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

